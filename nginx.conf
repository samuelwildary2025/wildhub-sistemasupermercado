# ===================================
# NGINX.CONF UNIFICADO
# Frontend (React/Vite) + Backend Proxy (FastAPI)
# ===================================

# Configurações globais
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Configurações de eventos
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# Configurações HTTP
http {
    # ===================================
    # Configurações básicas
    # ===================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Formato de log
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # ===================================
    # Otimizações de performance
    # ===================================
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;

    # ===================================
    # Compressão GZIP
    # ===================================
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # ===================================
    # Configuração do servidor principal
    # ===================================
    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # ===================================
        # Headers de segurança
        # ===================================
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

        # ===================================
        # Proxy para API do Backend (FastAPI)
        # ===================================
        location /api/ {
            # Proxy para o backend FastAPI PRESERVANDO o prefixo /api
            # O backend expõe rotas com prefixo /api, então não devemos removê-lo
            proxy_pass http://127.0.0.1:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # Preserve o protocolo original (HTTPS) vindo do proxy externo
            # Em ambientes behind-proxy, o request chega como HTTP no Nginx interno,
            # mas o cliente usa HTTPS. Forçamos o header para evitar mixed content em redirects.
            proxy_set_header X-Forwarded-Proto https;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # ===================================
        # Servir arquivos estáticos do frontend
        # ===================================
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache para arquivos estáticos
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
        }

        # ===================================
        # Configurações específicas
        # ===================================
        
        # Favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        # Arquivos ocultos
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # ===================================
        # Health check
        # ===================================
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}